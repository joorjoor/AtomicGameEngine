# This is the CMakeCache file.
# For build in directory: e:/AtomicGameEngine/Build/Scripts/Windows
# It was generated by CMake: E:/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//The target ABI for Android. If arm, then armeabi-v7a is recommended
// for hardware floating point.
ANDROID_ABI:STRING=armeabi-v7a

//Prevent cmake from working under cygwin and using cygwin tools
ANDROID_FORBID_SYGWIN:BOOL=TRUE

//Use 32-bit ARM instructions instead of Thumb-1
ANDROID_FORCE_ARM_BUILD:BOOL=OFF

//Put each function in separate section and enable garbage collection
// of unused input sections at link time
ANDROID_FUNCTION_LEVEL_LINKING:BOOL=ON

//Enables gold linker
ANDROID_GOLD_LINKER:BOOL=ON

//path for android libs
ANDROID_LIBRARY_OUTPUT_PATH:PATH=E:/AtomicGameEngine/Build/Scripts/Windows/libs/armeabi-v7a

//Android API level for native code
ANDROID_NATIVE_API_LEVEL:STRING=9

//Try to use 64-bit compiler toolchain
ANDROID_NDK_HOST_X64:BOOL=1

//The inner layout of NDK
ANDROID_NDK_LAYOUT:STRING=RELEASE

//Allows or disallows undefined symbols in shared libraries
ANDROID_NOEXECSTACK:BOOL=ON

//Show all undefined symbols as linker errors
ANDROID_NO_UNDEFINED:BOOL=ON

//Enables RELRO - a memory corruption mitigation technique
ANDROID_RELRO:BOOL=ON

//Allows or disallows undefined symbols in shared libraries
ANDROID_SO_UNDEFINED:BOOL=OFF

//C++ runtime
ANDROID_STL:STRING=gnustl_static

//automatically configure rtti and exceptions support based on
// C++ runtime
ANDROID_STL_FORCE_FEATURES:BOOL=ON

//Value Computed by CMake
Atomic_BINARY_DIR:STATIC=E:/AtomicGameEngine/Build/Scripts/Windows

//Value Computed by CMake
Atomic_SOURCE_DIR:STATIC=E:/AtomicGameEngine

//archive
CMAKE_AR:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-gcc-ar.exe

//assembler
CMAKE_ASM_COMPILER:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-gcc.exe

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:UNINITIALIZED=

//C++ compiler
CMAKE_CXX_COMPILER:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-g++.exe

//c++ flags
CMAKE_CXX_FLAGS:STRING=

//c++ Debug flags
CMAKE_CXX_FLAGS_DEBUG:STRING=-O0 -g -DDEBUG -D_DEBUG

//c++ Release flags
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//C compiler
CMAKE_C_COMPILER:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-gcc.exe

//c flags
CMAKE_C_FLAGS:STRING=

//c Debug flags
CMAKE_C_FLAGS_DEBUG:STRING=-O0 -g -DDEBUG -D_DEBUG

//c Release flags
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//executable linker flags
CMAKE_EXE_LINKER_FLAGS:STRING=-Wl,-z,nocopyreloc

//linker
CMAKE_LINKER:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-ld.exe

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=CMAKE_MAKE_PROGRAM-NOTFOUND

//module linker flags
CMAKE_MODULE_LINKER_FLAGS:STRING=

//nm
CMAKE_NM:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-nm.exe

//objcopy
CMAKE_OBJCOPY:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-objcopy.exe

//objdump
CMAKE_OBJDUMP:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-objdump.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Atomic

//ranlib
CMAKE_RANLIB:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-ranlib.exe

//shared linker flags
CMAKE_SHARED_LINKER_FLAGS:STRING=

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=TRUE

//strip
CMAKE_STRIP:PATH=E:/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-strip.exe

//No help, variable specified on the command line.
CMAKE_TOOLCHAIN_FILE:UNINITIALIZED=../../../Build/CMake/Toolchains/android.toolchain.cmake

//Output directory for applications
EXECUTABLE_OUTPUT_PATH:PATH=E:/AtomicGameEngine/Build/Scripts/Windows/bin

//root for library output, set this to change where android libs
// are installed to
LIBRARY_OUTPUT_PATH_ROOT:PATH=E:/AtomicGameEngine/Build/Scripts/Windows


########################
# INTERNAL cache entries
########################

//STRINGS property for variable: ANDROID_ABI
ANDROID_ABI-STRINGS:INTERNAL=arm64-v8a;armeabi;armeabi-v6 with VFP;armeabi-v7a;armeabi-v7a with NEON;armeabi-v7a with VFPV3;mips;mips64;x86;x86_64
//Android specific c/c++ flags
ANDROID_CXX_FLAGS:INTERNAL=-Wno-psabi --sysroot=E:/ndk/platforms/android-9/arch-arm -funwind-tables -finline-limit=64 -fsigned-char -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fdata-sections -ffunction-sections -Wa,--noexecstack
//Android specific c/c++ Debug flags
ANDROID_CXX_FLAGS_DEBUG:INTERNAL=-marm -fno-omit-frame-pointer -fno-strict-aliasing
//Android specific c/c++ Release flags
ANDROID_CXX_FLAGS_RELEASE:INTERNAL=-mthumb -fomit-frame-pointer -fno-strict-aliasing
//ADVANCED property for variable: ANDROID_FORBID_SYGWIN
ANDROID_FORBID_SYGWIN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_FORCE_ARM_BUILD
ANDROID_FORCE_ARM_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_FUNCTION_LEVEL_LINKING
ANDROID_FUNCTION_LEVEL_LINKING-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_GOLD_LINKER
ANDROID_GOLD_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_LIBRARY_OUTPUT_PATH
ANDROID_LIBRARY_OUTPUT_PATH-ADVANCED:INTERNAL=1
//Android specific c/c++ linker flags
ANDROID_LINKER_FLAGS:INTERNAL= -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now
//STRINGS property for variable: ANDROID_NATIVE_API_LEVEL
ANDROID_NATIVE_API_LEVEL-STRINGS:INTERNAL=3;4;5;8;9;12;13;14;15;16;17;18;19;21
//Path of the Android NDK
ANDROID_NDK:INTERNAL=E:/ndk
//ADVANCED property for variable: ANDROID_NDK_HOST_X64
ANDROID_NDK_HOST_X64-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_NDK_LAYOUT
ANDROID_NDK_LAYOUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_NOEXECSTACK
ANDROID_NOEXECSTACK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_NO_UNDEFINED
ANDROID_NO_UNDEFINED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_RELRO
ANDROID_RELRO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_SO_UNDEFINED
ANDROID_SO_UNDEFINED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_STL
ANDROID_STL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ANDROID_STL_FORCE_FEATURES
ANDROID_STL_FORCE_FEATURES-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=e:/AtomicGameEngine/Build/Scripts/Windows
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=18
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=E:/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=E:/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=E:/CMake/bin/ctest.exe
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=E:/CMake/bin/cmake-gui.exe
//Whether to issue deprecation errors for macros and functions.
CMAKE_ERROR_DEPRECATED:INTERNAL=FALSE
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=E:/AtomicGameEngine
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=E:/CMake/share/cmake-3.18
//Whether to issue warnings for deprecated functionality.
CMAKE_WARN_DEPRECATED:INTERNAL=FALSE

